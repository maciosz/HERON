Find peaks using HMM from hmmlearn.

Preliminary test version of beta version.

The program attempts to identify sites of enrichment
 in the signal from NGS data;
 it takes coverages of mapped reads as an input
 and returns bed file with coordinates of peaks,
 i.e. sites of presumed enrichment.

Current usage:

./peakcaller.py -i sample1.bedgraph sample2.bedgraph ...

possibly with

-s - number of states (default 3)
-o - prefix to output files

Current output:
 generates file '[prefix]_all_states.txt' with, well, states
 can be pasted with windows.bed, awked and used as bed with states
 (do I still need this file?)
 ...and now also ready files [prefix]_state_[x].bed
 Also, generates [prefix].log with log messages
 and [prefix]_stats.txt with some statistics.
 Checks which state has the highest mean coverage over samples,
 assumes it denotes peaks and copies file [prefix]_state_x.bed to [prefix]_peaks.bed.

Warning.
Assumes that bedgraphs have fixed resolution
 and starts with coordinate 0
 (bedgraphs are indeed 0-relative,
 but technically they might start from something else)
 (ok, to be fair it will manage with bedgraphs that start with multiplication of resolution,
 like 200; it will just add missing windows.)

