Find peaks using HMM from hmmlearn.

Preliminary test version of beta version.

The program attempts to identify sites of enrichment
 in the signal from NGS data;
 it takes coverages of mapped reads as an input
 and returns bed file with coordinates of peaks,
 i.e. sites of presumed enrichment.

Current usage:

./peakcaller.py -i sample1.bedgraph sample2.bedgraph ...

possibly with

-s - number of states (default 3)
-o - prefix to output files
-l - level of logging
-d - distribution of emissions (Gauss / NB; defaults to NB)
-t - threshold for outliers; windows higher than that will be considered outliers
     and replaced with median value from the whole genome (excluding outliers);
     0 (default) means no threshold
--dont-save - do not save one of the states as peaks

Current output:
 generates
 # file '[prefix]_all_states.txt' with, well, states
 # can be pasted with windows.bed, awked and used as bed with states
 # (do I still need this file?) (I guess not, but just in case I only comment it, not remove yet)
 # ...and now also 
 ready files [prefix]_state_[x].bed.
 Also, generates [prefix].log with log messages
 and [prefix]_stats.txt with some statistics.
 Checks which state has the highest mean coverage over samples,
 assumes it denotes peaks and copies file [prefix]_state_x.bed to [prefix]_peaks.bed.
 Unless you add --dont-save argument, then it doesn't.

Warning.
Assumes that bedgraphs 
 start with coordinate 0
 (bedgraphs are indeed 0-relative,
 but technically they might start from something else)
 (ok, to be fair it will manage with bedgraphs that start with multiplication of resolution,
 like 200; it will just add missing windows).
 (it won't now, because it would have to assume some resolution. I removed that useless feature.)
 Requires bedgraphs to have fixed resolution,
 exits otherwise.
 When using multiple bedgraphs,
 requires them to have identical coordinates;
 exits otherwise.
 If there are some floats in the bedgraph, program will convert them to integers.

Tested on python 2.7. Won't work with python3.
